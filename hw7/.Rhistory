apply(lapply(speechPres[4], function(x) wordMat[,x]), 1, sum)
lapply(speechPres[4], function(x) wordMat[,x])
lapply(speechPres[4], function(x) wordMat[,x])
lapply(speechPres[4], function(x) wordMat[,x])
apply(lapply(speechPres[4], function(x) wordMat[,x])[[1]], 1, sum)
presMat <- list(0)
for(i in 1:41) {presMat[i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat
presMat <- list(0)
for(i in 1:41) {presMat[i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
lapply(speechPres[1], function(x) wordMat[,x])[[1]]
lapply(speechPres[1], function(x) wordMat[,x])[[1]]
apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[1], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[12], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[14], function(x) wordMat[,x])[[1]], 1, sum)
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat[1]
presMat <- list(0)
speechPres[11]
speechPres[12]
speechPres[14]
speechPres[[1]][14]
speechPres[11][[1]]
speechPres[11][[3]]
speechPres[12][[1]]
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i][[1]], function(x) wordMat[,x])[[1]], 1, sum)}
apply(lapply(speechPres[41][[1]], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41][[1]], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[11][[1]], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[1][[1]], function(x) wordMat[,x])[[1]], 1, sum)
lapply(speechPres[1][[1]], function(x) wordMat[,x])[[1]]
lapply(speechPres[41][[1]], function(x) wordMat[,x])[[1]]
lapply(speechPres[41], function(x) wordMat[,x])[[1]]
lapply(speechPres[41], function(x) wordMat[,x])[[1]]
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres, function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres, function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres, function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres, function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[1], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres, function(x) wordMat[,x])[[1]], 1, sum)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat <- list(0)
speechPres[41]
wordMat[,222]
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
rm(preslist)
presMat
presMat
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
speechPres
speechPres[41]
speechPres[[41]]
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[[i]], function(x) wordMat[,x])[[1]], 1, sum)}
lapply(speechPres[[i]], function(x) wordMat[,x])
lapply(speechPres[[i]], function(x) wordMat[,x])
lapply(speechPres[[1]], function(x) wordMat[,x])
lapply(speechPres[[1]], function(x) wordMat[,x])
lapply(speechPres[[1]], function(x) wordMat[,x])
lapply(lapply(speechPres[[1]], function(x) wordMat[,x]), sum)
for(i in 1:41) {presMat[[i]] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
lapply(speechPres[41], function(x) wordMat[,x])[[1]]
wordMat[2436]
wordMat[2436,]
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)[2436]
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[1], function(x) wordMat[,x])[[1]], 1, sum)
apply(lapply(speechPres[22], function(x) wordMat[,x])[[1]], 1, sum)
for(i in 1:41) {presMat[i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat <- c(0)
for(i in 1:41) {presMat[i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat
presMat <- matrix(0, 20964, 41)
for(i in 1:41) {presMat[,i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presmat[,3]
presMat[,3]
presMat
presMat[,3]
presMat <- matrix(0, 20964, 41)
presMat
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
presMat[,41] <- apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
presMat[,41]
apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
presMat <- matrix(0, 20964, 41)
for(i in 1:41) {presMat[,i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat[,41] <- apply(lapply(speechPres[41], function(x) wordMat[,x])[[1]], 1, sum)
presMat
!presMat
for(i in 1:41) {presMat[,i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
dim(lapply(speechPres[41], function(x) wordMat[, x]))
dim(lapply(speechPres[41], function(x) wordMat[, x]))
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
dim(lapply(speechPres[41], function(x) wordMat[, x]))
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[i], function(x) wordMat[,x])[[1]]
lapply(speechPres[i], function(x) wordMat[,x])[[1]]
lapply(speechPres[i], function(x) wordMat[,x])[[1]]
lapply(speechPres[i], function(x) wordMat[,x])[[1]]
lapply(speechPres[i], function(x) wordMat[,x])[[1]]
dim(lapply(speechPres[i], function(x) wordMat[,x])[[1]])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])[1:100]
lapply(speechPres[41], function(x) wordMat[, x])[[1]][1:4]
lapply(speechPres[41], function(x) wordMat[, x])[[1]][1:6]
lapply(speechPres[41], function(x) wordMat[, x])[[1]]
lapply(speechPres[41], function(x) wordMat[, x])[[1]]
lapply(speechPres[41], function(x) wordMat[, x])[[1]]
lapply(speechPres[41], function(x) wordMat[, x])
lapply(speechPres[41], function(x) wordMat[, x])[[1]]
dim(lapply(speechPres[41], function(x) wordMat[, x])[[1]])
as.matrix(lapply(speechPres[41], function(x) wordMat[, x])[[1]])
dim(as.matrix(lapply(speechPres[41], function(x) wordMat[, x])[[1]]))
dim(as.array(lapply(speechPres[41], function(x) wordMat[, x])[[1]]))
presMat <- matrix(0, 20964, 41)
for(i in 1:41) {presMat[,i] <- apply(lapply(speechPres[i], function(x) wordMat[,x])[[1]], 1, sum)}
presMat <- list(0)
for(i in 1:41) {presMat[i] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
warnings
warnings()
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
presMat
presMat[[1]]
apply(presMat, 1, sum)
dim(presMat)
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
dim(presMat[[1]])
apply(presMat[[1]], 1, sum)
for(i in 1:41) {presMat[[1]] <- apply(presMat[[1]], 1, sum)}
presMat[[1]]
presMat[[2]]
presMat[[3]]
presMat[[41]]
presMat[[42]]
presMat[[40]]
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
presMat[[1]]
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
presMat[[1]]
apply(presMat[[1]], 1, sum)
apply(presMat[[1:41]], 1, sum)
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
lapply(1:41, function(x) apply(presMat[[x]], 1, sum))
apply(presMat[[2]], 1, sum)
apply(presMat[[41]], 1, sum)
apply(presMat[[41]], 1, sum)
lapply(1:41, function(x) apply(presMat[[x]], 1, sum))
lapply(1:41, function(x) apply(presMat[[x]], 1, sum))
apply(presMat[[2]], 1, sum)
apply(presMat[[12]], 1, sum)
apply(presMat[[13]], 1, sum)
final[1] <- apply(presMat[[1]], 1, sum)
final <- c(0)
final[1] <- apply(presMat[[1]], 1, sum)
final = c(final, apply(presMat[[1]], 1, sum))
final
final <- c(0)
final = c(final, apply(presMat[[1]], 1, sum))
final = c(apply(presMat[[1]], 1, sum))
final <- c()
final = c(apply(presMat[[1]], 1, sum))
for(i in 1:41) {final = c(final, apply(presMat[[i]], 1, sum))}
presMat[[2]]
presMat <- list(0)
for(i in 1:41) {presMat[i] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
presMat <- list(0)
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
presMat[[2]]
presMat[[40]]
presMat[[40]]
presMat[[40]]
presMat[[40]]
presMat[[40]]
presMat[[40]]
presMat[[40]]
for(i in 1:41) {final = c(final, apply(presMat[[i]], 1, sum))}
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
for(i in 1:41) {final = c(final, apply(presMat[[i]], 1, sum))}
dim(presMat[[1]])
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
apply(presMat[[1]], 1, sum)
final[[1]] <- apply(presMat[[1]], 1, sum)
final <- c(final[[1]] <- apply(presMat[[1]], 1, sum))
final <- c(apply(presMat[[1]], 1, sum))
final
final <- c(apply(presMat[[1]], 1, sum), apply(presMat[[2]], 1, sum))
for(i in 1:41) {final <- c(final, apply(presMat[[i]], 1, sum))}
251568/20964
presMat[[13]]
presMat[[12]]
presMat[[13]]
View(speechesDF)
dim(presMat[[13]])
dim(presMat[[12]])
dim(presMat[[12]])
dim(presMat[[12]])
dim(presMat[[12]])
dim(presMat[[11]])
dim(presMat[[10]])
dim(presMat[[11]])
presMat[[11]]
presMat[[11]]
View(speechesDF)
presMat[[12]]
presMat[[1]]
presMat[[2]]
presMat[[2]]
presMat[[2]]
presMat[[3]]
presMat[[4]]
presMat[[5]]
presMat[[6]]
presMat[[7]]
presMat[[4]]
presMat[[8]]
presMat[[9]]
presMat[[10]]
presMat[[11]]
speechPres <- list(0)
presMat <- list(0)
final <- c()
for(i in 1:41) {speechPres[[i]] <- which(speechesDF$Pres == unique(speechesDF$Pres)[i])}
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x], drop = F)[[1]]}
for(i in 1:41) {final <- c(final, apply(presMat[[i]], 1, sum))}
presMat[11]
presMat[11]
presMat[10]
presMat[[10]]
presMat[[11]]
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
presMat[[11]]
presMat[[12]]
presMat[[11]]
as.matrix(presMat[[11]])
for(i in 1:41) {final <- c(final, apply(as.matrix(presMat[[i]]), 1, sum))}
final
859524/20964
presidentWordMat <- matrix(final, 20964, 41)
presidentWordMat
presidentWordMat[,41]
presidentWordMat[,1]
uniqueWords[997]
uniqueWords[9997]
uniqueWords[9997]
uniqueWords[9997]
uniqueWords[9997]
uniqueWords[9974]
uniqueWords[9974]
uniqueWords[9974]
uniqueWords[9975]
presidentWordMat[,41]
presidentWordMat[,41]
wordMat[,22]
wordMat[,222]
wordMat[,221]
wordMat[,220]
wordMat[,219]
wordMat[,219]
wordMat[,220]
wordMat[,219]
wordMat[,220]
wordMat[,221]
wordMat[,222]
presidentWordMat[,41]
apply(presidentWordMat, 1, function(x) 41-!x)
apply(presidentWordMat, 1, function(x) sum(!x)
apply(presidentWordMat, 1, function(x) sum(!x))
apply(presidentWordMat, 1, function(x) 41-sum(!x))
docFreq <- apply(presidentWordMat, 1, function(x) 41-sum(!x))
presDist <- computeSJDistance(presidentWordMat, docFreq, uniqueWords)
presDist
length(uniqueWords)
gsub("\\<[:digit:]\\>", "", "I am 124 potato")
gsub("\\<[:digit:]\\>", "", "I am 124 potato")
gsub("[:digit:]", "", "I am 124 potato")
gsub("[[:digit:]]", "", "I am 124 potato")
gsub("[[:digit:]]", "", "I am 124 potato")
gsub("[[:digit:]]", "", "I am 124 potato")
gsub("[[:digit:]]", "", "I am 124lele potato")
gsub("[[:digit:]]", "", "I am 124lele potato")
gsub("[[:digit:]]", "", "I am 124lele potato")
speechToWords = function(sentences) {
# Input  : sentences, a character string
# Output : words, a character vector where each element is one word
lowcase <- tolower(sentences)
nopunct <- gsub("[[:punct:]]", "", lowcase)
noclaps <- gsub("applause", "", nopunct)
nonum <- gsub("[[:digit:]]", "", noclaps)
words.list <- strsplit(nonum, "\\ ")[[1]]
words.list <- words.list[words.list != ""]
words <- wordStem(words.list)
words <- words[words != ""]
return(words)
# return a character vector of all words in the speech
}
speechWords <- sapply(eachspeech[[1]][2:223], FUN = speechToWords)
allwords <- c(0)
for(i in 1:n.speeches) {allwords = c(allwords, speechWords[[i]])}
uniqueWords <- sort(unique(allwords))
uniqueWords <- sort(unique(allwords))
wordcount <- c(1:(length(uniqueWords)*222))
count <- list(0)
for(i in 1:222) {count[[i]] <- table(speechToWords(eachspeech[[1]][i+1])) }
for(j in 1:222) {
for(i in 1:length(uniqueWords)) {
wordcount[i+(j-1)*length(uniqueWords)] <-
max(count[[j]]
[names(count[[j]]) == uniqueWords[i]], 0)
}
}
wordMat <- matrix(wordcount, length(uniqueWords), 222)
words <- lapply(1:222, function(x) length(speechWords[[x]]))
chars <- lapply(1:222, function(x) nchar(speechWords[x])[[1]])
sentences <- lapply(1:222, function(x) length(speechesL[[x]]))
speechesDF$yr <- speechYr
speechesDF$month <- speechMo
speechesDF$words <- words
speechesDF$chars <- chars
speechesDF$sent <- sentences
speechPres <- list(0)
presMat <- list(0)
final <- c()
for(i in 1:41) {speechPres[[i]] <- which(speechesDF$Pres == unique(speechesDF$Pres)[i])}
for(i in 1:41) {presMat[[i]] <- lapply(speechPres[i], function(x) wordMat[,x])[[1]]}
for(i in 1:41) {final <- c(final, apply(as.matrix(presMat[[i]]), 1, sum))}
presidentWordMat <- matrix(final, length(uniqueWords), 41)
699009/4`
699009/41
699009/41
docFreq <- apply(presidentWordMat, 1, function(x) 41-sum(!x))
presDist <- computeSJDistance(presidentWordMat, docFreq, uniqueWords)
mds <- cmdscale(preDist)
mds <- cmdscale(presDist)
mds
plot(mds)
points(mds, xlab = "", ylab = "", main = "Presidents", pch = "speechesDF$inital")
speechesDF$initals
speechesDF$inital
speechesDF$init
which(speechesDF$Pres == unique(speechesDF$Pres)
unique(speechesDF$Init)
unique(speechesDF$init)
test(mds, xlab = "", ylab = "", main = "Presidents", labels = unique(speechesDF$init))
text(mds, xlab = "", ylab = "", main = "Presidents", labels = unique(speechesDF$init))
plot(mds)
text(mds, xlab = "", ylab = "", main = "Presidents", labels = unique(speechesDF$init))
text(mds, labels = unique(speechesDF$init), xlab = "", ylab = "", main = "Presidents")
plot(mds)
text(mds, labels = unique(speechesDF$init), xlab = "", ylab = "", main = "Presidents")
points(mds, labels = unique(speechesDF$init), xlab = "", ylab = "", main = "Presidents")
plot(mds, labels = unique(speechesDF$init), xlab = "", ylab = "", main = "Presidents")
plot(mds, xlab = "", ylab = "", main = "Presidents")
plot(mds, xlab = "", ylab = "", main = "Presidents", type=p)
plot(mds, xlab = "", ylab = "", main = "Presidents", type=p)
plot(mds)
plot(mds, xlab = "", ylab = "", main = "Presidents", type="p")
plot(mds, xlab = "", ylab = "", main = "Presidents", type="p")
text(mds, labels = unique(speechesDF$init), xlab = "", ylab = "", main = "Presidents")
unique(speechesDF$init)
unique(speechesDF$Pres)
unique(speechesDF$Pres)[speechesDF$party]
speechesDF$party[unique(speechesDF$Pres)]
unique(speechesDF$Pres)
unique(speechesDF$Pres)
unique(speechesDF$Pres)
speechesDF$party[speechesDF$initial = BO]
speechesDF$party[speechesDF$initial == BO]
speechesDF$party[speechesDF$initial == "BO"]
speechesDF$party[speechesDF$initial]
speechesDF$party[speechesDF$initial == ]
speechesDF$party[speechesDF$Pres]
speechesDF$party
levels(speechesDF$party)
levels(speechesDF$initial)
levels(speechesDF$initial)[speechesDF$party]
speechesDF$party[levels(speechesDF$initial)
speechesDF$party[levels(speechesDF$initial)]
speechesDF$party[unique(speechesDF$initial)]
speechesDF$party[(speechesDF$initial)]
rainbow()
rainbow(10)
rainbow(10)
rainbow(6)
rainbow(6)
presParty
speechesDF$party[unique(speechesDF$initial)]
GW[speechesDF$party]
speechesDF$party
speechesDF$party[speechesDF$initial == GW]
speechesDF$party[speechesDF$initial == "GW"]
speechesDF$party[speechesDF$initial == "GW"]
speechesDF$party[speechesDF$initial == "GW"]
unique(speechesDF$party[speechesDF$initial == "GW"])
speechesDF$initial
levelsspeechesDF$initial
levels(speechesDF$initial)
unique(speechesDF$initial)
lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x]))
lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x])[[1]])
lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x])[1])
lapply(unique(speechesDF$initial)[[1]], function(x) unique(speechesDF$party[speechesDF$initial == x]))
lapply(unique(speechesDF$initial)[1], function(x) unique(speechesDF$party[speechesDF$initial == x]))
lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x]))
lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x]))
unlist(lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x]))
unlist(lapply(unique(speechesDF$initial), function(x) unique(speechesDF$party[speechesDF$initial == x])))
presParty <- unlist(lapply(unique(speechesDF$initial), function(x)
unique(speechesDF$party[speechesDF$initial == x])))
names(presParty) <- unique(speechesDF$Pres)
presParty
plot(mds, type="n", main = "Presidents", xlab="", ylab="")
plot(mds)
plot(mds, xlab = "", ylab = "", main = "Presidents")
text(mds, labels = unique(speechesDF$init))
cols <- rainbow(6)
plot(mds, type="n", main = "Presidents", xlab="", ylab="")
text(mds, labels = unique(speechesDF$init), col = cols[presParty[rownames(presParty)]])
text(mds, labels = unique(speechesDF$init), col = cols[presParty[rownames(presParty)]])
text(mds, labels = names(presParty), col = cols[presParty[rownames(presParty)]])
cols <- rainbow(6)
text(mds, labels = names(presParty), col = cols[presParty[rownames(presParty)]])
cols <- rainbow(6)
text(mds, labels = names(presParty), col = cols[presParty[rownames(presParty)]])
text(mds, labels = names(presParty), col = cols[presParty[rownames(presParty)]])
text(mds, labels = names(presParty), col = cols[presParty[names(presParty)]])
hc = hclust(as.dist(presDist))
plot(hc)
plot(c(1:3), c(1:5))
plot(c(1:3), c(2, 4, 6))
plot(speechYr, sentences)
plot(speechYr, words)
plot(speechYr, chars)
plot(speechYr, char/word)
plot(speechYr, word/sent)
plot(speechYr, chars/words)
plot(speechYr, words/sentences)
plot(speechYr, chars%/%words)
plot(speechYr, words%/%sentences)
chars/words
apply(1:222, chars/words)
apply(1:222, function(x) chars[x]/words[x])
apply(1:222, function(x) chars[x]/words[x])
lapply(1:222, function(x) chars[x]/words[x])
lapply(1:222, function(x) chars[x]/words[x])
chars[12]
chars[[1]][12]
chars12[[1]]
chars[12][[1]]
words[12]
lapply(1:222, function(x) chars[x][[1]]/words[x][[1]])
plot(speechYr, lapply(1:222, function(x) chars[x][[1]]/words[x][[1]]))
plot(speechYr, lapply(1:222, function(x) words[x][[1]]/sentences[x][[1]]))
plot(speechYr, sentences, xlab = "speech sentances", ylab = "year", main = "State of the Union Charts")
plot(speechYr, words, xlab = "speech words", ylab = "year", main = "State of the Union Charts")
plot(speechYr, chars, xlab = "speech characters", ylab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) chars[x][[1]]/words[x][[1]]), xlab = "word length", ylab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) words[x][[1]]/sentences[x][[1]]), xlab = "sentance length", ylab = "year", main = "State of the Union Charts")
plot(speechYr, sentences, ylab = "speech sentances", xlab = "year", main = "State of the Union Charts")
plot(speechYr, words, ylab = "speech words", xlab = "year", main = "State of the Union Charts")
plot(speechYr, chars, ylab = "speech characters", xlab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) chars[x][[1]]/words[x][[1]]), ylab = "word length", xlab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) words[x][[1]]/sentences[x][[1]]), ylab = "sentance length", xlab = "year", main = "State of the Union Charts")
source('~/Documents/Classes - Fall 2014/Stat 133/git/stat133/hw7/hw7.R', echo=TRUE)
pdf("~/Desktop/Rplots.pdf")
plot(mds)
plot(mds, xlab = "", ylab = "", main = "Presidents")
text(mds, labels = unique(speechesDF$init))
plot(mds, type="n", main = "Presidents", xlab="", ylab="")
text(mds, labels = names(presParty), col = cols[presParty[names(presParty)]])
plot(hc)
plot(speechYr, sentences, ylab = "speech sentences", xlab = "year", main = "State of the Union Charts")
plot(speechYr, words, ylab = "speech words", xlab = "year", main = "State of the Union Charts")
plot(speechYr, chars, ylab = "speech characters", xlab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) chars[x][[1]]/words[x][[1]]), ylab = "word length", xlab = "year", main = "State of the Union Charts")
plot(speechYr, lapply(1:222, function(x) words[x][[1]]/sentences[x][[1]]), ylab = "sentance length", xlab = "year", main = "State of the Union Charts")
dev.off()
