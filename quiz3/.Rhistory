grep("@", c('karl', 'k@rl', '@@@'))
length(grep("@", c('karl', 'k@rl', '@@@')))
numAtElements <- function(chvec){
num.at <- length(grep("@", c('karl', 'k@rl', '@@@')))
return(num.at)
}
numAtElements(c('karl', 'k@tr@', '@@@@', '@k@', 'k@@', 'atkkk'))
numAtElements <- function(chvec){
num.at <- length(grep("@", chvec))
return(num.at)
}
numAtElements(c('karl', 'k@tr@', '@@@@', '@k@', 'k@@', 'atkkk'))
gsub("!", ".", "I am so! fucking! tired.")
unexclaim <- function(chstring) {
newstring <- gsub("!", ".", chstring)
return(newstring)
}
unexclaim('I am! I think I am. No, I am!')
grep('2010', c('May, 2010', 'June, 2011'))
grep('2010', c('May, 2010', 'June, 2011'), value = T)
grep('2010', c('May, 2010', 'June, 2011', 'June, 2010'), value = T)
updateDate <- function(dates, old.yr) {
old.yr.only <- grep(old.yr, dates, value = T)
updated.dates <- gsub(old.yr, 2015, old.yr.only)
return(updated.dates)
}
updateDate(c('May, 2010', 'June, 2011'), '2010')
updateDate(c('May, 2010', 'June, 2011', 'March, 2012', 'July, 2010'), '2010')
gsub('cat', '', "doGCATcat abcAt")
gsub('cat', '', tolower("doGCATcat abcAt"))
tolower("doGCATcat abcAt")
gsub('cat', '', "dogcatcat abcat")
gsub('cat', '.', "dogcatcat abcat")
strslplit('cat', "dogcatcat abcat")
strsplit('cat', "dogcatcat abcat")
countcatdog<- function(chvec){
lowcase <- tolower(chvec)
numcat <- (nchar(lowcase) - nchar(gsub('cat', '', lowcase)))/3
numdog <- (nchar(lowcase) - nchar(gsub('dog', '', lowcase)))/3
counts <- (numcat, numdog)
names(counts) <- c('cat', 'dog')
return(counts)
}
countcatdog<- function(chvec){
lowcase <- tolower(chvec)
numcat <- (nchar(lowcase) - nchar(gsub('cat', '', lowcase)))/3
numdog <- (nchar(lowcase) - nchar(gsub('dog', '', lowcase)))/3
counts <- (numcat, numdog)
names(counts) <- c('cat', 'dog')
return(counts)
}
lowcase <- tolower("doGCATcat abcAt")
numcat <- (nchar(lowcase) - nchar(gsub('cat', '', lowcase)))/3
numdog <- (nchar(lowcase) - nchar(gsub('dog', '', lowcase)))/3
countcatdog<- function(chvec){
lowcase <- tolower(chvec)
numcat <- (nchar(lowcase) - nchar(gsub('cat', '', lowcase)))/3
numdog <- (nchar(lowcase) - nchar(gsub('dog', '', lowcase)))/3
counts <- c(numcat, numdog)
names(counts) <- c('cat', 'dog')
return(counts)
}
countcatdog("doGCATcat abcAt")
countcatdog("doGCATcat abcAt catattack dogratog catbattitfortat doggod")
countcatdog("doGCATcat abcAt catdog catdog catcat")
rm(lowcase)
rm(numcat)
rm(numdog)
gsub("[^A-Za-z]+", "I am a 1234 pretty pony")
gsub("[^A-Za-z]+", "", "I am a 1234 pretty pony")
gsub("[:digits:]+", "", "I am a 1234 pretty pony")
gsub("[:digit:]+", "", "I am a 1234 pretty pony")
gsub("1", "", "I am a 1234 pretty pony")
gsub("1+", "", "I am a 1234 pretty pony")
gsub("1", "", "I am a 1234 pretty pony")
gsub("[^A-Za-z]+", "", "I am a 1234 pretty pony")
gsub("[1-9]+", "", "I am a 1234 pretty pony")
gsub("^(?![:digit:]$).*", "", "I am a 1234 pretty pony")
as.numeric("I am a 1234 pretty pony")
as.numeric("I am a 1234 pretty pony")
as.numeric(as.character(("I am a 1234 pretty pony"))
as.numeric(as.character(("I am a 1234 pretty pony")))
("[^0-9]","", "I am a pretty pony")
gsub("[^0-9]","", "I am a 1234 pretty pony")
strsplit("", " ", "1234")
strsplit(" ", "", "1234")
strsplit("1234", "")
as.numeric(strsplit("1234", "")[[1]])
sum(as.numeric(strsplit("1234", "")[[1]]))
sumDigits <- function(chvec){
digits <- gsub("[^0-9]","", chevec)
sep.digits <- as.numeric(strsplit(digits, "")[[1]])
total <- sum(sep.digits)
return(total)
}
all.equal(sumDigits("1z3p ! 21"), 7)
sumDigits <- function(chvec){
digits <- gsub("[^0-9]","", chvec)
sep.digits <- as.numeric(strsplit(digits, "")[[1]])
total <- sum(sep.digits)
return(total)
}
all.equal(sumDigits("1z3p ! 21"), 7)
all.equal(sumDigits("abcdefg"), 0)
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG"))
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"))
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"), value = 2)
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"))
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"), value = T)
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"), value = T)
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"), value = T)[1, 2]
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG", "ATTAGTTACG"), value = T)[1:2]
grep("ATTA", c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"), value = T)
"ATTAGATACT"[1:5]
substring("ATTAGATACT", 5)
substring("ATTAGATACT", 6)
substring("ATTAGATACT", 1:5)
substring("ATTAGATACT", 6)
substring("ATTAGATACT", 1)
substring("ATTAGATACT", 5)
substring("ATTAGATACT", 6)
substring("ATTAGATACT", 1, 1)
substring("ATTAGATACT", 1, 5)
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
}
all.equal(dnaTransform(c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"))
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"))
dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"))
grep("ATTA", c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"), value = T)[1:2]
length(grep("ATTA", c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"), value = T)[1:2])
length(grep("ATTA", c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"), value = T)[1:2])
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
if strings[1] == NA %or% strings[2] == NA return(DNA.vec[1:2])
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
if strings[1] == NA %or% strings[2] == NA {return(DNA.vec[1:2])}
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
if(strings[1] == NA %or% strings[2] == NA) return(DNA.vec[1:2])
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
strings <- grep("ATTA", "ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT", value = T)[1:2]
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
length(DNA_final)
nchar(strings)
sum(nchar(strings))
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
if(sum(nchar(strings)) != 20) {return(DNA.vec)}
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
all.equal(dnaTransform(c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT"))
dnaTransform <- function(DNA.vec){
strings <- grep("ATTA", DNA.vec, value = T)[1:2]
if(sum(nchar(strings)) != 20) {return(DNA.vec[1:2])}
DNA1 <- c(substring(strings[1], 1, 5), substring(strings[1], 6))
DNA2 <- c(substring(strings[2], 1, 5), substring(strings[2], 6))
st1 <- paste0(DNA1[1], DNA2[2])
st2 <- paste0(DNA2[1], DNA1[2])
DNA_final <- c(st1, st2)
return(DNA_final)
}
all.equal(dnaTransform(c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
source('~/Documents/Classes - Fall 2014/Stat 133/git/stat133/quiz3/quiz3.r', echo=TRUE)
numAtElements(c('karl', 'k@rl', '@@@'))
unexclaim("I'm a leet hacker!")
updateDate(c('May, 2010', 'June, 2011'), '2010')
countcatdog("doGCATcat abcAt")
all.equal(sumDigits("1z3p ! 21"), 7)
all.equal(sumDigits("abcdefg"), 0)
all.equal(dnaTransform(c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
numAtElements("123, jg3, @rj, @@@, k@f, @A@")]
numAtElements("123, jg3, @rj, @@@, k@f, @A@")
numAtElements(c('123', 'jg3', '@rj', '@@@', 'k@f', '@A@'))
unlist(numAtElements(c('123', 'jg3', '@rj', '@@@', 'k@f', '@A@')))
unexclaim("I am! not! potato. I am! gro!tor!")
updateDate(c("March, 2014", "May, 2015", "Daisy, 2014", "Potato, 2013"), "2014")
countcatdog("dogcat caaaaatdoooog docatg")
countcatdog("dogcat caaaaatdoooog docatg, DoGCAATCAT")
sumDigits("12 erermn56 etoint4om34~~~~$i091")
dnaTransform(c("AAAAAATTAC", "GCGCGCAATT", "AATTGCGCAT", "ATTAGCGCGC"))
source('~/Documents/Classes - Fall 2014/Stat 133/git/stat133/quiz3/quiz3.r', echo=TRUE)
all.equal(dnaTransform(c("AAAAAAAAAA", "ATTAGATACT", "ATACATTACG")), c("ATTAGTTACG", "ATACAATACT"))
all.equal(dnaTransform(c("ATCGATCGAT", "TCGATCGATT", "ATTTTTTTTT")), c("ATCGATCGAT", "TCGATCGATT"))
all.equal(sumDigits("1z3p ! 21"), 7)
all.equal(sumDigits("abcdefg"), 0)
